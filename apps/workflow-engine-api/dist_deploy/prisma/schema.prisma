generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Workflow {
  id          String   @id @default(cuid())
  name        String
  description String?
  version     String   @default("1.0.0")
  definition  String
  status      String   @default("DRAFT")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  executions  WorkflowExecution[]
  steps       WorkflowStep[]
  schedules   WorkflowSchedule[]
}

model WorkflowExecution {
  id           String    @id @default(cuid())
  workflowId   String
  status       String    @default("PENDING")
  startedAt    DateTime?
  completedAt  DateTime?
  inputData    String?
  outputData   String?
  errorMessage String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  workflow       Workflow @relation(fields: [workflowId], references: [id])
  stepExecutions WorkflowStepExecution[]
}

model WorkflowStep {
  id            String   @id @default(cuid())
  workflowId    String
  name          String
  type          String
  configuration String
  position      String
  onError       String   @default("stop")
  order         Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  workflow   Workflow @relation(fields: [workflowId], references: [id])
  executions WorkflowStepExecution[]
}

model WorkflowStepExecution {
  id           String    @id @default(cuid())
  executionId  String
  stepId       String
  status       String    @default("PENDING")
  startedAt    DateTime?
  completedAt  DateTime?
  inputData    String?
  outputData   String?
  errorMessage String?
  retryCount   Int       @default(0)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  execution WorkflowExecution @relation(fields: [executionId], references: [id])
  step      WorkflowStep      @relation(fields: [stepId], references: [id])
}

model WorkflowSchedule {
  id             String    @id @default(cuid())
  workflowId     String
  cronExpression String
  isActive       Boolean   @default(true)
  lastRunAt      DateTime?
  nextRunAt      DateTime?
  inputData      String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  workflow Workflow @relation(fields: [workflowId], references: [id])
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("USER")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
